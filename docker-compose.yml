version: '3'

services:
  database:
    image: postgres
    container_name: database_dev
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} # 'grespost'
      POSTGRES_USER: ${POSTGRES_USER} # 'postgres'
      POSTGRES_DB: ${POSTGRES_DB} # 'INFOM126'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5
  back-end:
    container_name: back-end_dev
    build:
      context: './back-end'
      dockerfile: 'Dockerfile.dev'
    ports:
      - '5000:5000'
    environment:
      DB_HOST: ${HOST_ADDRESS}
      DB_PORT: 5432
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./back-end:/python-docker
    depends_on:
      database:
        condition: service_healthy

  front-end:
    container_name: front-end_dev
    build:
      context: './front-end'
      dockerfile: 'Dockerfile.dev'
    ports:
      - '3000:3000'
    environment:
      API_HOST: ${HOST_ADDRESS}
      API_PORT: 5000
    volumes:
      - ./front-end:/node-docker
    depends_on:
      - back-end
