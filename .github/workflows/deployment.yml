###############################################################
# Deployment pipeline. It installs into the production server #
# the project, pulled from the 'main' branch, and runs        #
# it via docker compose.                                      #
###############################################################


name: Deployment-pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:

  ############################################################
  # Pull project on production server and (re)start services #
  ############################################################
  deploy:
    runs-on: ubuntu-latest
    steps:
    
    #
    # Install ssh keys in the GitHub actions runner
    #
    - name: Install ssh keys
      # check this thread to understand why its needed:
      # https://stackoverflow.com/a/70447517
      run: |
        install -m 600 -D /dev/null ~/.ssh/id_rsa
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        ssh-keyscan -p ${{ secrets.SSH_PORT }} -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
    
    #
    # Connect to production server and pull project
    #
    - name: Connect and pull
      run: >
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} -p${{ secrets.SSH_PORT }} "
          cd ${{ secrets.WORK_DIR }} &&
          git checkout ${{ secrets.MAIN_BRANCH }} &&
          git pull &&
          exit
        "

    #
    # Set environments variables and start services with docker compose
    #
    - name: Set envs and start services
      run: >
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} -p${{ secrets.SSH_PORT }} "
          cd ${{ secrets.WORK_DIR }} &&
          export POSTGRES_DB=${{ secrets.ENV__POSTGRES_DB }} &&
          export POSTGRES_USER=${{ secrets.ENV__POSTGRES_USER }} &&
          export POSTGRES_PASSWORD=${{ secrets.ENV__POSTGRES_PASSWORD }} &&
          export HOST_ADDRESS=${{ secrets.ENV__HOST_ADDRESS }} &&
          docker compose stop &&
          docker compose -f 'docker-compose.prod.yml' up -d --build &&
          exit
        "
 
    #
    # Remove ssh keys from the GitHub actions runner
    #
    - name: Cleanup
      run: rm -rf ~/.ssh
